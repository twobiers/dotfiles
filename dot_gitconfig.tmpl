{{ if not (eq .chezmoi.hostname "tobi-endeavouros") }}
[gpg]
  format = "ssh"
[gpg "ssh"]
	allowedSignersFile = {{ .chezmoi.homeDir }}/.ssh/allowed_signers
{{ end }}

[commit]
    gpgsign = true
[core]
    longpaths = true
    excludesFile = {{ .chezmoi.homeDir }}/.gitignore
    editor = code --wait
    fsmonitor = true
[user]
	email = 22715034+twobiers@users.noreply.github.com
	name = twobiers
{{ if not (eq .chezmoi.hostname "tobi-endeavouros") }}
  signingkey = "~/.ssh/id_ed25519.pub"
{{ else }}
	signingkey = A67F16C775263A042C3973600F1206AF317A578E
{{ end }}

# Conditional Author includes
[includeIf "gitdir/i:innovation-hub/**"]
    path = ~/.config/git/author-ihbr.inc
[includeIf "gitdir/i:ihbr/**"]
	path = ~/.config/git/author-ihbr.inc
[includeIf "gitdir/i:vgbs/**"]
    path = ~/.config/git/author-vgbs.inc
[includeIf "gitdir/i:Digital-Solution-Platform/**"]
    path = ~/.config/git/author-vgbs.inc
[includeIf "gitdir/i:Digital-Solutions-Foundation/**"]
    path = ~/.config/git/author-vgbs.inc
[includeIf "gitdir/i:the-microservice-dungeon/**"]
    path = ~/.config/git/author-gitlab-noreply.inc
[includeIf "gitdir/i:microservice-dungeon/**"]
    path = ~/.config/git/author-gitlab-noreply.inc

[url "git@github.com:"]
	  insteadOf = "https://github.com/"
[url "git@github.com:"]
	  insteadOf = "gh:"
[url "git@gitlab.com:"]
	  insteadOf = "https://gitlab.com/"
[url "git@gitlab.com:"]
	  insteadOf = "gl:"

[alias]
    yolo = "!git add -A && git commit -m \"$(curl --silent --fail http://whatthecommit.com/index.txt)\""
    c = commit --verbose
    ca = commit -a --verbose
    cm = commit -m
    cam = commit -a -m
    cane = commit --amend --no-edit

    d = diff
    dc = diff --cached
    ds = diff --staged

    s = status -s

    l = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
    # ll = "log --pretty=format:\"%C(yellow)%h%Creset %C(blue)%ad%Creset %s\" --date=format:'%Y-%m-%d %H:%M:%S'"
    ll = "log --graph --topo-order --decorate --all --boundary --date=short --abbrev-commit --pretty=format:'%Cgreen%ad %Cred%h%Creset -%C(yellow)%d%Creset %s %Cblue[%cn]%Creset %Cblue%G?%Creset'"
    lll = "log --graph --topo-order --boundary --decorate --all --date=iso8601-strict --no-abbrev-commit --abbrev=40 --pretty=format:'␟%ad␟%h␟%s␟%cn <%ce>␟%G?' | git name-rev --stdin --always --name-only | awk 'BEGIN { FS="␟"; OFS="␟"; } { $4 = substr($4, 1, 50); print $0; }' | column -s'␟' -t"
    change-commits = "!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch --env-filter \"if [[ \\\"$`echo $VAR`\\\" = '$OLD' ]]; then export $VAR='$NEW'; fi\" $@; }; f"

    gfx='git commit --fixup $(git log $(git merge-base main HEAD)..HEAD --oneline| fzf| cut -d" " -f1)'
[log]
    date = iso
[pull]
    rebase = true
[push]
    autosetupremote = true
[diff]
    algorithm = histogram
[init]
    defaultBranch = main
[rerere]
    enabled = true
[branch]
	  sort = -committerdate
[rebase]
    autostash = true
