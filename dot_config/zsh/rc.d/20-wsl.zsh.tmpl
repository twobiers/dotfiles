#!/usr/bin/env zsh

{{ if eq .chezmoi.os "linux" }}
{{ if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
# Only necessary when on WSL

# NTFS Mounts in WSL2 are slow as they are used under the 9P protocol
# Therefore we exclude the drives. However, notice that this could affect
# commands like code or docker that provide native interopt.

ZSH_HIGHLIGHT_DIRS_BLACKLIST+=(/mnt/c)
# We excluded the windows path. Make sure that we can still use some interop programs
path+=(
#  "/mnt/c/Users/{{ .user.windows }}/AppData/Local/Programs/Microsoft VS Code/bin"
  "/mnt/c/Program Files/Microsoft VS Code/bin"
  "/mnt/c/Program Files/Docker/Docker/resources/bin"
)

keep_current_path() {
  printf "\e]9;9;%s\e\\" "$(wslpath -w "$PWD")"
}
precmd_functions+=(keep_current_path)

# Works a bit
# To make it work on systemd-based WSL2:
# sudo systemctl disable --global gpg-agent.socket
# sudo systemctl disable --global gpg-agent-extra.socket
# sudo systemctl disable --global gpg-agent-ssh.socket
# sudo systemctl disable --global gpg-agent-browser.socket
# sudo systemctl disable --global dirmngr.socket

SOCAT_SSH_PID_FILE=$HOME/.ssh/socat-ssh.pid

if [[ -f $SOCAT_SSH_PID_FILE ]] && kill -0 $(cat $SOCAT_SSH_PID_FILE); then
   :
else
    rm -f "$HOME/.ssh/wsl2-ssh-agent.sock"
    (trap "rm $SOCAT_SSH_PID_FILE" EXIT; socat UNIX-LISTEN:"$HOME/.ssh/wsl2-ssh-agent.sock,fork,unlink-close,unlink-early" EXEC:"/mnt/c/tools/npiperelay/npiperelay.exe /\/\./\pipe/\winssh-pageant",nofork </dev/null &>/dev/null) &
    echo $! >$SOCAT_SSH_PID_FILE
fi
export SSH_AUTH_SOCK=$HOME/.ssh/wsl2-ssh-agent.sock

SOCAT_PID_FILE=$HOME/.gnupg/socat-gpg.pid

if [[ -f $SOCAT_PID_FILE ]] && kill -0 $(cat $SOCAT_PID_FILE); then
   : 
else
    rm -f "$HOME/.gnupg/S.gpg-agent"
    (trap "rm $SOCAT_PID_FILE" EXIT; socat UNIX-LISTEN:"$HOME/.gnupg/S.gpg-agent,fork" EXEC:'/mnt/c/tools/npiperelay/npiperelay.exe -ei -ep -s -a "C:/Users/{{ .user.windows }}/AppData/Local/gnupg/S.gpg-agent"',nofork </dev/null &>/dev/null) &
    echo $! >$SOCAT_PID_FILE
fi
export GPG_AGENT_SOCK=$HOME/.gnupg/S.gpg-agent


{{ end }}
{{ end }}
