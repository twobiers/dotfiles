if test -f "$HOME/.cargo/env"; then
  . "$HOME/.cargo/env"
fi

append_path () {
    case ":$PATH:" in
        *:"$1":*)
            ;;
        *)
            PATH="${PATH:+$PATH:}$1"
    esac
}

append_path "$HOME/bin"

{{ if eq .chezmoi.os "linux" }}
{{   if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}

# SSH GPG Shit setup in WSL2

# Autorun for ssh-relay
SOCAT_SSH_PID_FILE=$HOME/.ssh/socat-ssh.pid

if [[ -f $SOCAT_SSH_PID_FILE ]] && kill -0 $(cat $SOCAT_SSH_PID_FILE); then
   : # already running
else
    rm -f "$HOME/.ssh/wsl2-ssh-agent.sock"
    (trap "rm $SOCAT_SSH_PID_FILE" EXIT; socat UNIX-LISTEN:"$HOME/.ssh/wsl2-ssh-agent.sock,fork,unlink-close,unlink-early" EXEC:"/mnt/c/tools/npiperelay/npiperelay.exe /\/\./\pipe/\winssh-pageant",nofork </dev/null &>/dev/null) &
    echo $! >$SOCAT_SSH_PID_FILE
fi
export SSH_AUTH_SOCK=$HOME/.ssh/wsl2-ssh-agent.sock

# Autorun for gpg-relay
SOCAT_PID_FILE=$HOME/.gnupg/socat-gpg.pid

if [[ -f $SOCAT_PID_FILE ]] && kill -0 $(cat $SOCAT_PID_FILE); then
   : # already running
else
    rm -f "$HOME/.gnupg/S.gpg-agent"
    (trap "rm $SOCAT_PID_FILE" EXIT; socat UNIX-LISTEN:"$HOME/.gnupg/S.gpg-agent,fork" EXEC:'/mnt/c/tools/npiperelay/npiperelay.exe -ei -ep -s -a "C:/Users/tobi/AppData/Local/gnupg/S.gpg-agent"',nofork </dev/null &>/dev/null) &
    echo $! >$SOCAT_PID_FILE
fi
export GPG_AGENT_SOCK=$HOME/.gnupg/S.gpg-agent

# Use .kubeconfig from windows mount
export KUBECONFIG=/mnt/c/users/tobi/.kube/config

{{   end }}
{{ end }}

if [[ "$XDG_SESSION_TYPE" = 'wayland' ]]; then
  export SDL_VIDEODRIVER=wayland
  export QT_QPA_PLATFORM=wayland
  export _JAVA_AWT_WM_NONREPARENTING=1
  export BEMENU_BACKEND=wayland
  export MOZ_ENABLE_WAYLAND=1
fi
